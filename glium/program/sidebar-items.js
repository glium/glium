initSidebarItems({"enum":[["BlockLayout","Layout of a shader storage buffer or a uniform buffer."],["GetBinaryError","Error while retrieving the binary representation of a program."],["OutputPrimitives","Type of primitives that is being output by transform feedback."],["ProgramChooserCreationError","Error type that is returned by the `program!` macro."],["ProgramCreationError","Error that can be triggered when creating a `Program`."],["ProgramCreationInput","Input when creating a program."],["ShaderStage","The different stages of the program pipeline."],["TransformFeedbackMode","Type of transform feedback. Only used with the legacy interface."]],"fn":[["is_binary_supported","Returns true if the backend supports creating and retrieving binary format."],["is_geometry_shader_supported","Returns true if the backend supports geometry shaders."],["is_subroutine_supported","Returns true if the backend supports shader subroutines."],["is_tessellation_shader_supported","Returns true if the backend supports tessellation shaders."]],"struct":[["Attribute","Information about an attribute of a program (except its name)."],["Binary","Represents the compiled binary data of a program."],["ComputeCommand","Represents a compute shader command waiting to be dispatched."],["ComputeShader","A combination of compute shaders linked together."],["Program","A combination of shaders linked together."],["SourceCode","Represents the source code of a program."],["SubroutineData","Contains all subroutine data of a program."],["SubroutineUniform","Information about a Subroutine Uniform (except name)"],["TransformFeedbackBuffer","Describes the layout of a buffer that can receive transform feedback output."],["TransformFeedbackVarying","Describes a varying that is being output with transform feedback."],["Uniform","Information about a uniform (except its name)."],["UniformBlock","Information about a uniform block (except its name)."]]});