initSidebarItems({"enum":[["ClientFormat","List of client-side pixel formats."],["CompressedFormat","List of compressed texture formats."],["CompressedMipmapsOption","Describes what to do about mipmaps during compressed texture creation."],["CompressedSrgbFormat","List of compressed pixel formats in the sRGB color space."],["CubeLayer","Represents a layer of a cubemap."],["DepthFormat","List of formats available for depth textures."],["DepthStencilFormat","List of formats available for depth-stencil textures."],["Dimensions","Type of a texture."],["GetFormatError","Error that can happen when retrieving the internal format of a texture."],["InternalFormat","Internal format of a texture."],["InternalFormatType","Format of a component of an internal format."],["MipmapsOption","Describes what to do about mipmaps during texture creation."],["SrgbFormat","List of uncompressed pixel formats that contain floating-point data in the sRGB color space."],["StencilFormat","List of formats available for stencil textures."],["TextureCreationError","Error that can happen when creating a texture."],["TextureFormat","Format of the internal representation of a texture."],["TextureKind","Represents a kind of texture."],["UncompressedFloatFormat","List of uncompressed pixel formats that contain floating-point-like data."],["UncompressedIntFormat","List of uncompressed pixel formats that contain signed integral data."],["UncompressedUintFormat","List of uncompressed pixel formats that contain unsigned integral data."]],"fn":[["is_cubemap_arrays_supported","Returns true is cubemap arrays are supported."],["is_cubemaps_supported","Returns true is cubemaps are supported."],["is_texture_1d_array_supported","Returns true is one-dimensional texture arrays are supported."],["is_texture_1d_supported","Returns true is one-dimensional textures are supported."],["is_texture_2d_array_supported","Returns true is two-dimensional texture arrays are supported."],["is_texture_2d_multisample_array_supported","Returns true is two-dimensional multisample texture arrays are supported."],["is_texture_2d_multisample_supported","Returns true is two-dimensional multisample textures are supported."],["is_texture_2d_supported","Returns true is two-dimensional textures are supported."],["is_texture_3d_supported","Returns true is three-dimensional textures are supported."]],"mod":[["bindless","Without bindless textures, using a texture in a shader requires binding the texture to a specific bind point before drawing. This not only slows down rendering, but may also prevent you from grouping multiple draw calls into one because of the limitation to the number of available texture units."],["buffer_texture","A `BufferTexture` is a special kind of one-dimensional texture that gets its data from a buffer. Buffer textures have very limited capabilities compared to other texture types."],["compressed_cubemap","Contains the implementation of `CompressedCubemap`."],["compressed_cubemap_array","Contains the implementation of `CompressedCubemapArray`."],["compressed_srgb_cubemap","Contains the implementation of `CompressedSrgbCubemap`."],["compressed_srgb_cubemap_array","Contains the implementation of `CompressedSrgbCubemapArray`."],["compressed_srgb_texture1d","Contains the implementation of `CompressedSrgbTexture1d`."],["compressed_srgb_texture1d_array","Contains the implementation of `CompressedSrgbTexture1dArray`."],["compressed_srgb_texture2d","Contains the implementation of `CompressedSrgbTexture2d`."],["compressed_srgb_texture2d_array","Contains the implementation of `CompressedSrgbTexture2dArray`."],["compressed_srgb_texture3d","Contains the implementation of `CompressedSrgbTexture3d`."],["compressed_texture1d","Contains the implementation of `CompressedTexture1d`."],["compressed_texture1d_array","Contains the implementation of `CompressedTexture1dArray`."],["compressed_texture2d","Contains the implementation of `CompressedTexture2d`."],["compressed_texture2d_array","Contains the implementation of `CompressedTexture2dArray`."],["compressed_texture3d","Contains the implementation of `CompressedTexture3d`."],["cubemap","Contains the implementation of `Cubemap`."],["cubemap_array","Contains the implementation of `CubemapArray`."],["depth_cubemap","Contains the implementation of `DepthCubemap`."],["depth_cubemap_array","Contains the implementation of `DepthCubemapArray`."],["depth_stencil_cubemap","Contains the implementation of `DepthStencilCubemap`."],["depth_stencil_cubemap_array","Contains the implementation of `DepthStencilCubemapArray`."],["depth_stencil_texture1d","Contains the implementation of `DepthStencilTexture1d`."],["depth_stencil_texture1d_array","Contains the implementation of `DepthStencilTexture1dArray`."],["depth_stencil_texture2d","Contains the implementation of `DepthStencilTexture2d`."],["depth_stencil_texture2d_array","Contains the implementation of `DepthStencilTexture2dArray`."],["depth_stencil_texture2d_multisample","Contains the implementation of `DepthStencilTexture2dMultisample`."],["depth_stencil_texture2d_multisample_array","Contains the implementation of `DepthStencilTexture2dMultisampleArray`."],["depth_stencil_texture3d","Contains the implementation of `DepthStencilTexture3d`."],["depth_texture1d","Contains the implementation of `DepthTexture1d`."],["depth_texture1d_array","Contains the implementation of `DepthTexture1dArray`."],["depth_texture2d","Contains the implementation of `DepthTexture2d`."],["depth_texture2d_array","Contains the implementation of `DepthTexture2dArray`."],["depth_texture2d_multisample","Contains the implementation of `DepthTexture2dMultisample`."],["depth_texture2d_multisample_array","Contains the implementation of `DepthTexture2dMultisampleArray`."],["depth_texture3d","Contains the implementation of `DepthTexture3d`."],["integral_cubemap","Contains the implementation of `IntegralCubemap`."],["integral_cubemap_array","Contains the implementation of `IntegralCubemapArray`."],["integral_texture1d","Contains the implementation of `IntegralTexture1d`."],["integral_texture1d_array","Contains the implementation of `IntegralTexture1dArray`."],["integral_texture2d","Contains the implementation of `IntegralTexture2d`."],["integral_texture2d_array","Contains the implementation of `IntegralTexture2dArray`."],["integral_texture2d_multisample","Contains the implementation of `IntegralTexture2dMultisample`."],["integral_texture2d_multisample_array","Contains the implementation of `IntegralTexture2dMultisampleArray`."],["integral_texture3d","Contains the implementation of `IntegralTexture3d`."],["pixel_buffer","Pixel buffers are buffers that contain two-dimensional texture data."],["srgb_cubemap","Contains the implementation of `SrgbCubemap`."],["srgb_cubemap_array","Contains the implementation of `SrgbCubemapArray`."],["srgb_texture1d","Contains the implementation of `SrgbTexture1d`."],["srgb_texture1d_array","Contains the implementation of `SrgbTexture1dArray`."],["srgb_texture2d","Contains the implementation of `SrgbTexture2d`."],["srgb_texture2d_array","Contains the implementation of `SrgbTexture2dArray`."],["srgb_texture2d_multisample","Contains the implementation of `SrgbTexture2dMultisample`."],["srgb_texture2d_multisample_array","Contains the implementation of `SrgbTexture2dMultisampleArray`."],["srgb_texture3d","Contains the implementation of `SrgbTexture3d`."],["stencil_cubemap","Contains the implementation of `StencilCubemap`."],["stencil_cubemap_array","Contains the implementation of `StencilCubemapArray`."],["stencil_texture1d","Contains the implementation of `StencilTexture1d`."],["stencil_texture1d_array","Contains the implementation of `StencilTexture1dArray`."],["stencil_texture2d","Contains the implementation of `StencilTexture2d`."],["stencil_texture2d_array","Contains the implementation of `StencilTexture2dArray`."],["stencil_texture2d_multisample","Contains the implementation of `StencilTexture2dMultisample`."],["stencil_texture2d_multisample_array","Contains the implementation of `StencilTexture2dMultisampleArray`."],["texture1d","Contains the implementation of `Texture1d`."],["texture1d_array","Contains the implementation of `Texture1dArray`."],["texture2d","Contains the implementation of `Texture2d`."],["texture2d_array","Contains the implementation of `Texture2dArray`."],["texture2d_multisample","Contains the implementation of `Texture2dMultisample`."],["texture2d_multisample_array","Contains the implementation of `Texture2dMultisampleArray`."],["texture3d","Contains the implementation of `Texture3d`."],["unsigned_cubemap","Contains the implementation of `UnsignedCubemap`."],["unsigned_cubemap_array","Contains the implementation of `UnsignedCubemapArray`."],["unsigned_texture1d","Contains the implementation of `UnsignedTexture1d`."],["unsigned_texture1d_array","Contains the implementation of `UnsignedTexture1dArray`."],["unsigned_texture2d","Contains the implementation of `UnsignedTexture2d`."],["unsigned_texture2d_array","Contains the implementation of `UnsignedTexture2dArray`."],["unsigned_texture2d_multisample","Contains the implementation of `UnsignedTexture2dMultisample`."],["unsigned_texture2d_multisample_array","Contains the implementation of `UnsignedTexture2dMultisampleArray`."],["unsigned_texture3d","Contains the implementation of `UnsignedTexture3d`."]],"struct":[["RawImage1d","Represents raw data for a two-dimensional image."],["RawImage2d","Represents raw data for a two-dimensional image."],["RawImage3d","Represents raw data for a two-dimensional image."],["TextureAny","A texture whose type isn't fixed at compile-time."],["TextureAnyImage","Represents a specific 2D image of a texture. 1D textures are considered as having a height of 1."],["TextureAnyLayer","Represents a specific layer of an array texture and 3D textures."],["TextureAnyLayerMipmap","Represents a specific layer of a specific mipmap. This is the same as `TextureAnyImage`, except for 3D textures, cubemaps and cubemap arrays."],["TextureAnyMipmap","Represents a specific mipmap of a texture."]],"trait":[["PixelValue","A trait that must be implemented for any type that can represent the value of a pixel."],["Texture1dDataSink","Trait that describes types that can be built from one-dimensional texture data."],["Texture1dDataSource","Trait that describes data for a one-dimensional texture."],["Texture2dDataSink","Trait that describes types that can be built from two-dimensional texture data."],["Texture2dDataSource","Trait that describes data for a two-dimensional texture."],["Texture3dDataSink","Trait that describes types that can be built from one-dimensional texture data."],["Texture3dDataSource","Trait that describes data for a two-dimensional texture."],["ToClientFormat",""]]});